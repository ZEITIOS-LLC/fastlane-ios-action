name: 'Fastlane Action for iOS'
description: 'Execute fastlane pipeline for iOS'
inputs:
  build-number:
    description: |
      Build number
    required: false
    default: '1'
  build-name:
    description: |
      Build name
    required: false
    default: '1.0'
  app-identifier:
    description: 'App Store application bundle identifier'
    required: true
  team-id:
    description: 'App Store Connect Team ID (if any)'
    required: false
  itc-team-id:
    description: 'iTunes Connect Team ID (if any)'
    required: false
  scheme:
    description: 'iOS project scheme to build'
    required: true
  configuration:
    description: 'iOS project configuration to use'
    required: false
    default: 'Release'
  xcodeproj:
    description: 'Path to main XCode project'
    required: true
  xcworkspace:
    description: 'Path to main XCode workspace'
    required: false
  apple-key-id:
    description: 'Apple App Store Connect Key ID'
    required: true
  apple-issuer-id:
    description: 'Apple App Store Connect Issuer ID'
    required: true
  apple-key-base64:
    description: 'Apple App Store Connect Key contents (.p8) in base64'
    required: true
  match-password:
    description: 'Password to encrypt/decrypt certificates using match'
    required: true
  match-git-basic-auth:
    description: 'Match Git Basic Auth'
    required: true
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2'
        bundler-cache: true
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Check if Flutter app
      id: flutter-check
      run: |
        if [ -f "pubspec.yaml" ]; then
          if grep -q "flutter:" pubspec.yaml; then
            echo "::set-output name=is_flutter::true"
          else
            echo "::set-output name=is_flutter::false"
          fi
        else
          echo "::set-output name=is_flutter::false"
        fi
      shell: bash

    - name: Install React Native dependencies
      if: steps.flutter-check.outputs.is_flutter == 'false'
      run: |
        yarn
      shell: bash

    - uses: subosito/flutter-action@v2
      if: steps.flutter-check.outputs.is_flutter == 'true'

    - name: Install Flutter dependencies
      if: steps.flutter-check.outputs.is_flutter == 'true'
      run: |
        flutter pub get
      shell: bash
    - id: create-apple-key-file
      if: ${{ inputs.apple-key-base64 != '' }}
      shell: bash
      env:
        TMPDIR: ${{ runner.temp }}
      run: |
        echo "${{ inputs.apple-key-base64 }}" | base64 -d > "${TMPDIR}/__apple_key.p8"
        echo "apple-key-file=${TMPDIR}/__apple_key.p8" >> $GITHUB_OUTPUT
    - id: run-fastlane
      shell: bash
      run: bundle exec fastlane ios release
      env:
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ inputs.match-git-basic-auth }}
        MATCH_PASSWORD: ${{ inputs.match-password }}
        APP_BUILD_NUMBER: ${{ inputs.build-number }}
        APP_BUILD_NAME: ${{ inputs.build-name }}
        APP_IDENTIFIER: ${{ inputs.app-identifier }}
        TEAM_ID: ${{ inputs.team-id }}
        ITC_TEAM_ID: ${{ inputs.itc-team-id }}
        IOS_SCHEME: ${{ inputs.scheme }}
        XCODE_PROJ: ${{ inputs.xcodeproj }}
        XCODE_WORKSPACE: ${{ inputs.xcworkspace }}
        APPLE_KEY_ID: ${{ inputs.apple-key-id }}
        APPLE_ISSUER_ID: ${{ inputs.apple-issuer-id }}
        APPLE_KEY_FILE: ${{ steps.create-apple-key-file.outputs.apple-key-file }}
    - id: upload-artifacts
      if: ${{ inputs.upload-artifacts == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: artifacts/